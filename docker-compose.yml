---
version: '3'

# expose services on port numbers 110xx to avoid conflicts with other projects

services:
  demo_zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: demo_zookeeper
    ports:
      - "11081:11081"
    environment:
      ZOOKEEPER_CLIENT_PORT: 11081
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - demo

  demo_kafka:
    image: confluentinc/cp-enterprise-kafka:5.4.0
    hostname: broker
    container_name: demo_kafka
    depends_on:
      - demo_zookeeper
    ports:
      - "11092:11092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'demo_zookeeper:11081'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:12092,PLAINTEXT_HOST://0.0.0.0:11092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://demo_kafka:12092,PLAINTEXT_HOST://localhost:11092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG_RETENTION_HOURS: -1
      KAFKA_LOG_RETENTION_BYTES: -1
      KAFKA_CLEANUP_POLICY: "compact"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "false"
    networks:
      - demo
#    volumes:
#      # create certs in the certs directory with the cache_certs.sh script
#      # used to talk to TLS protected topics if you're using the kafka command line tools in the container
#      - "./certs:/opt/certs"
#      - "${KAFKA_DATA_DIR:-./kafka_data}:/var/lib/kafka/data"

#  demo_influxdb:
#    image: influxdb:1.5-alpine
#    hostname: influxdb
#    container_name: demo_influxdb
#    ports:
#      - "11086:8086"
#    networks:
#      - demo

# LEAVING THIS HERE FOR OCCASIONAL USE WHEN DEVELOPING A NEW DASHBOARD
#  demo_grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    depends_on:
#      - demo_influxdb
#    ports:
#      - "3000:3000"
#    networks:
#      - demo

networks:
  demo:
